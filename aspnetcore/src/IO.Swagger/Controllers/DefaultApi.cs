/*
 * Menu API
 *
 * This API is used for restaurant order
 *
 * OpenAPI spec version: 1.0.0
 * Contact: thaip@us.ibm.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */
using System;
using System.Collections.Generic;
using Microsoft.AspNetCore.Mvc;
using Swashbuckle.AspNetCore.Annotations;
using Swashbuckle.AspNetCore.SwaggerGen;
using Newtonsoft.Json;
using System.ComponentModel.DataAnnotations;
using IO.Swagger.Attributes;

using Microsoft.AspNetCore.Authorization;
using IO.Swagger.Models;

namespace IO.Swagger.Controllers
{ 
    /// <summary>
    /// 
    /// </summary>
    [ApiController]
    public class DefaultApiController : ControllerBase
    { 
        /// <summary>
        /// Get information about a menu
        /// </summary>
        /// <remarks>Get menu based on menuItemNumber</remarks>
        /// <param name="menuItemNumber">menu information</param>
        /// <response code="200">successful</response>
        [HttpGet]
        [Route("/pt1417/thaip_Menu/1.0.0/menu/menu/{menuItemNumber}")]
        [ValidateModelState]
        [SwaggerOperation("MenuMenuMenuItemNumberGet")]
        [SwaggerResponse(statusCode: 200, type: typeof(List<InlineResponse200>), description: "successful")]
        public virtual IActionResult MenuMenuMenuItemNumberGet([FromRoute][Required]string menuItemNumber)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(List<InlineResponse200>));
            string exampleJson = null;
            exampleJson = "[ {\n  \"numAvailable\" : \"2\",\n  \"menuItemNumber\" : \"MENU-112\",\n  \"price\" : 12.95,\n  \"name\" : \"Salmon\",\n  \"description\" : \"Grilled Salmon\",\n  \"category\" : \"entry\"\n}, {\n  \"numAvailable\" : \"2\",\n  \"menuItemNumber\" : \"MENU-112\",\n  \"price\" : 12.95,\n  \"name\" : \"Salmon\",\n  \"description\" : \"Grilled Salmon\",\n  \"category\" : \"entry\"\n} ]";
            
                        var example = exampleJson != null
                        ? JsonConvert.DeserializeObject<List<InlineResponse200>>(exampleJson)
                        : default(List<InlineResponse200>);            //TODO: Change the data returned
            return new ObjectResult(example);
        }
    }
}
